# !/ usr / bin / runhaskell   import  Control . Monad   ( forM _ ) import  System . Random import  Data . List  as  L   import  Text . Blaze . Html5 import  Text . Blaze . Html . Renderer . Pretty   makeTable  ::  RandomGen g  =>   [ String ]   ->   Int   ->  g  ->  Html makeTable headings nRows gen  =   table  $   do     thead  $  tr  $  forM _   ( L . map  toHtml headings )  th     tbody  $  forM _   ( zip   [ 1   ..  nRows ]   $  unfoldr  ( Just  .  split )  gen )        ( \ ( x , g )   ->  tr  $  forM _   ( take   ( length  headings )                                    ( x:randomRs  ( 1000 , 9999 )  g ) )   ( td  .  toHtml ) )   main  =   do   g  <-  getStdGen    putStrLn   $  renderHtml  $  makeTable  [ "" ,   "X" ,   "Y" ,   "Z" ]   3  g